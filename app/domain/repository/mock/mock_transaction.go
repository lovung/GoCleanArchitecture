// Code generated by MockGen. DO NOT EDIT.
// Source: transaction.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTransactionManager is a mock of TransactionManager interface.
type MockTransactionManager struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionManagerMockRecorder
}

// MockTransactionManagerMockRecorder is the mock recorder for MockTransactionManager.
type MockTransactionManagerMockRecorder struct {
	mock *MockTransactionManager
}

// NewMockTransactionManager creates a new mock instance.
func NewMockTransactionManager(ctrl *gomock.Controller) *MockTransactionManager {
	mock := &MockTransactionManager{ctrl: ctrl}
	mock.recorder = &MockTransactionManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactionManager) EXPECT() *MockTransactionManagerMockRecorder {
	return m.recorder
}

// TxBegin mocks base method.
func (m *MockTransactionManager) TxBegin() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "TxBegin")
}

// TxBegin indicates an expected call of TxBegin.
func (mr *MockTransactionManagerMockRecorder) TxBegin() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TxBegin", reflect.TypeOf((*MockTransactionManager)(nil).TxBegin))
}

// TxCommit mocks base method.
func (m *MockTransactionManager) TxCommit() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TxCommit")
	ret0, _ := ret[0].(error)
	return ret0
}

// TxCommit indicates an expected call of TxCommit.
func (mr *MockTransactionManagerMockRecorder) TxCommit() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TxCommit", reflect.TypeOf((*MockTransactionManager)(nil).TxCommit))
}

// TxRollback mocks base method.
func (m *MockTransactionManager) TxRollback() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "TxRollback")
}

// TxRollback indicates an expected call of TxRollback.
func (mr *MockTransactionManagerMockRecorder) TxRollback() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TxRollback", reflect.TypeOf((*MockTransactionManager)(nil).TxRollback))
}

// GetTx mocks base method.
func (m *MockTransactionManager) GetTx() interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTx")
	ret0, _ := ret[0].(interface{})
	return ret0
}

// GetTx indicates an expected call of GetTx.
func (mr *MockTransactionManagerMockRecorder) GetTx() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTx", reflect.TypeOf((*MockTransactionManager)(nil).GetTx))
}
