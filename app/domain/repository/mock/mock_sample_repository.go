// Code generated by MockGen. DO NOT EDIT.
// Source: sample_repository.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/lovung/GoCleanArchitecture/app/domain/entity"
)

// MockSampleRepository is a mock of SampleRepository interface.
type MockSampleRepository struct {
	ctrl     *gomock.Controller
	recorder *MockSampleRepositoryMockRecorder
}

// MockSampleRepositoryMockRecorder is the mock recorder for MockSampleRepository.
type MockSampleRepositoryMockRecorder struct {
	mock *MockSampleRepository
}

// NewMockSampleRepository creates a new mock instance.
func NewMockSampleRepository(ctrl *gomock.Controller) *MockSampleRepository {
	mock := &MockSampleRepository{ctrl: ctrl}
	mock.recorder = &MockSampleRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSampleRepository) EXPECT() *MockSampleRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockSampleRepository) Create(ent entity.Sample) (entity.Sample, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ent)
	ret0, _ := ret[0].(entity.Sample)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockSampleRepositoryMockRecorder) Create(ent interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSampleRepository)(nil).Create), ent)
}

// GetByID mocks base method.
func (m *MockSampleRepository) GetByID(id interface{}) (entity.Sample, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", id)
	ret0, _ := ret[0].(entity.Sample)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockSampleRepositoryMockRecorder) GetByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockSampleRepository)(nil).GetByID), id)
}
