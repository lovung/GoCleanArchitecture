// Code generated by MockGen. DO NOT EDIT.
// Source: transaction.go

// Package mocktrans is a generated GoMock package.
package mocktrans

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockManager is a mock of Manager interface
type MockManager struct {
	ctrl     *gomock.Controller
	recorder *MockManagerMockRecorder
}

// MockManagerMockRecorder is the mock recorder for MockManager
type MockManagerMockRecorder struct {
	mock *MockManager
}

// NewMockManager creates a new mock instance
func NewMockManager(ctrl *gomock.Controller) *MockManager {
	mock := &MockManager{ctrl: ctrl}
	mock.recorder = &MockManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockManager) EXPECT() *MockManagerMockRecorder {
	return m.recorder
}

// TxnBegin mocks base method
func (m *MockManager) TxnBegin(ctx context.Context) context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TxnBegin", ctx)
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// TxnBegin indicates an expected call of TxnBegin
func (mr *MockManagerMockRecorder) TxnBegin(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TxnBegin", reflect.TypeOf((*MockManager)(nil).TxnBegin), ctx)
}

// TxnCommit mocks base method
func (m *MockManager) TxnCommit(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TxnCommit", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// TxnCommit indicates an expected call of TxnCommit
func (mr *MockManagerMockRecorder) TxnCommit(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TxnCommit", reflect.TypeOf((*MockManager)(nil).TxnCommit), ctx)
}

// TxnRollback mocks base method
func (m *MockManager) TxnRollback(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TxnRollback", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// TxnRollback indicates an expected call of TxnRollback
func (mr *MockManagerMockRecorder) TxnRollback(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TxnRollback", reflect.TypeOf((*MockManager)(nil).TxnRollback), ctx)
}

// GetTxn mocks base method
func (m *MockManager) GetTxn(ctx context.Context) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTxn", ctx)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// GetTxn indicates an expected call of GetTxn
func (mr *MockManagerMockRecorder) GetTxn(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTxn", reflect.TypeOf((*MockManager)(nil).GetTxn), ctx)
}
